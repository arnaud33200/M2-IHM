/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Command.PlayTokenCommand;
import Modele.GameModel;
import Modele.Player;
import Modele.Token;
import java.awt.Color;
import java.awt.FlowLayout;
import java.util.HashMap;
import java.util.Set;
import shapelabel.ShapeLabel;
import shapelabel.ShapeLabelEvent;
import shapelabel.ShapeLabelListener;

/**
 *
 * @author arnaud
 */
public class SimpleBoardGameView extends javax.swing.JPanel implements GameView {

    /**
     * Creates new form SimpleGameView
     */
    private GameModel model;
    
     private ShapeLabelListener listener = new ShapeLabelListener() {

        @Override
        public void ShapeLabelMouseClicked(ShapeLabelEvent e) {
            shapelabel.ShapeLabel sl = (shapelabel.ShapeLabel)e.getSource();
            
            int t = Integer.parseInt(sl.getText());
            PlayTokenCommand c = new PlayTokenCommand(model, t);
            c.execute();
            /*
            setShapeLabelInvisible(sl);
            sl.setEnabled(false);
            sl.removeShapeLabelClicked(listener);
            //remove((shapelabel.ShapeLabel)e.getSource());
            //availabletoken.remove((shapelabel.ShapeLabel)e.getSource());
            revalidate();
            getParent().repaint();*/
        }

        private void setShapeLabelInvisible(ShapeLabel sl) {
            sl.setBackground(Color.WHITE);
            sl.setForeground(Color.GRAY);
        }
    };
    
    public SimpleBoardGameView(GameModel m) {
        initComponents();
        model = m;
        setLayout(new FlowLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(206, 224, 180));
        setMinimumSize(new java.awt.Dimension(890, 90));
        setPreferredSize(new java.awt.Dimension(890, 90));
        setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 890, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void notify(GameModel m) {
        HashMap<Integer, Token> tokens = m.getAvailableTokens();
        Set<Integer> nums = tokens.keySet();
        removeAll();
        for (Integer i : nums){
            String txt = "" + i;
            shapelabel.ShapeLabel sl = new shapelabel.ShapeLabel(txt, Color.BLACK, Color.WHITE);
            sl.setBounds(0, 0, 20, 20);
            add(sl);
            sl.addShapeLabelClicked(listener);
        }
        revalidate();
        repaint();
    }
}
